openapi: 3.0.0
info:
  title: Journaling for Therapy API
  version: '1.0'
  description: An API for managing therapy sessions, client emotion journals, and therapist-client interactions.
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/KALRAVYOMA9/Therapy/1.0
  - url: https://api.therapyjournaling.com/v1
    description: Production server
  - url: https://api-staging.therapyjournaling.com/v1
    description: Staging server

tags:
  - name: Client Management
    description: Endpoints for managing client accounts and their interactions
  - name: Therapist Management
    description: Endpoints for managing therapist accounts and their interactions
  - name: Journals
    description: Endpoints for client emotion journals
  - name: Messaging
    description: Endpoints for client-therapist communication
  - name: Sessions
    description: Endpoints for managing therapy sessions
  - name: Search
    description: Endpoints for keyword searches
  - name: Authentication
    description: Endpoints for user authentication and authorization

paths:
  /clients:
    post:
      tags:
        - Client Management
      summary: Create a new client account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClientRequest'

      responses:
        '200':
          description: Client account created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ClientResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  /clients/{clientId}:
   
    get:
      tags:
        - Client Management
      summary: Get client information
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: fieldsToExclude
          in: query
          required: false
          schema:
            type: string
            description: Comma-separated list of fields to exclude from the response (e.g., "password,email")
      responses:
        '200':
          description: Client information retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                          $ref: '#/components/schemas/ClientResponse'
              
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
    delete:
      tags:
        - Client Management
      summary: Remove a client
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
            example: "12345"
            description: Unique identifier for the client to be removed
      responses:
        '200':
          description: Client removed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          clientId:
                            type: string
                            example: "12345"
                            description: Identifier of the removed client
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
    put:
      tags:
        - Client Management
      summary: Update client details
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
            example: "client123"
            description: Unique identifier of the client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateRequest'   
                - type: object
                  properties:
                    entity:
                      $ref: '#/components/schemas/ClientRequest'  
      responses:
        '200':
          description: Client details updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'  
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ClientResponse' 
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  /clients/{clientId}/therapists:
    get:
      tags:
        - Client Management
      summary: Retrieve the list of therapists associated with a client
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
            example: "12345"
            description: Unique identifier for the client
      responses:
        '200':
          description: List of therapists retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/TherapistResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
    
    post:
      tags:
        - Client Management
      summary: Associate a therapist with a client
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
            example: "12345"
            description: Unique identifier for the client
        - name: therapistId
          in: query
          required: true
          schema:
            type: string
            example: "12345"
            description: Unique identifier for the therapist
      responses:
        '200':
          description: Therapist associated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                          $ref: '#/components/schemas/TherapistResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
    delete:
      tags:
        - Client Management
      summary: Remove a therapist mapping from the client
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: therapistId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Therapist mapping removed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/TherapistResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  /clients/{clientId}/therapists/{therapistId}:
    put:
      tags:
        - Journals
      summary: Update journal access for a therapist
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
        - name: hasJournalAccess
          in: query
          required: true
          schema:
            type: boolean
            enum:
              - true
              - false
      responses:
        '200':
          description: Journal access updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
                   


    # delete:
    #   tags:
    #     - Client Management
    #   summary: Removes the journal access for the Therapist
    #   parameters:
    #     - name: clientId
    #       in: path
    #       required: true
    #       schema:
    #         type: string
    #     - name: therapistId
    #       in: path
    #       required: true
    #       schema:
    #         type: string
    #   responses:
    #     '200':
    #       description: Therapist Journal access removed
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               status:
    #                 type: boolean
    #                 example: true
    #               message:
    #                 type: string
    #                 example: "Therapist Journal access removed"
    #               data:
    #                 type: object
                    

    #     '400':
    #       description: Therapist or client not found
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               status:
    #                 type: boolean
    #                 example: false
    #               message:
    #                 type: string
    #                 example: "Therapist or client not found"
    #               data:
    #                 type: object
  /clients/{clientId}/journals:
    post:
      tags:
        - Journals
      summary: Add a new emotion record to the journal
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                  - $ref: '#/components/schemas/JournalRequest'
      responses:
        '200':
          description: Emotion record added successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                          $ref: '#/components/schemas/JournalResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
    get:
      tags:
        - Journals
      summary: Retrieve journal details for a client
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Journal details retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/JournalResponse'
                
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      
                      
                    
  # /clients/{clientId}/journal-access/{therapistId}/status:
  #   patch:
  #     tags:
  #       - Journals
  #     summary: Approve or reject therapist's request for journal access
  #     parameters:
  #       - name: clientId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: therapistId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: action
  #         in: query
  #         required: true
  #         schema:
  #           type: string
  #           enum:
  #             - approve
  #             - reject

  #     responses:
  #       '200':
  #         description: Action processed successfully
  #         content:
  #           application/json:
  #             schema:
  #               allOf:
  #                 - $ref: '#/components/schemas/Response'
 
  #       '400':
  #         description: Invalid input
  #         content:
  #           application/json:
  #             schema:
  #               allOf:
  #                 - $ref: '#/components/schemas/Response'
  #                 - type: object
  #                   properties:
  #                     status:
  #                       type: boolean
  #                       example: false
  #                     message :
  #                       type: string
  #                       example: Error occured
  
  /therapists:
    post:
      tags:
        - Therapist Management
      summary: Create a new therapist account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/TherapistRequest'
      responses:
        '200':
          description: Therapist account created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TherapistResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  /therapists/{therapistId}:
    get:
      tags:
        - Therapist Management
      summary: Retrieve therapist details
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
            example: "therapist123"
            description: Unique identifier of the therapist
      responses:
        '200':
          description: Therapist details retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TherapistResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  
    put:
      tags:
        - Therapist Management
      summary: Update therapist details
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
            example: "therapist123"
            description: Unique identifier of the therapist
      requestBody:
        required: true
        content:
          application/json:
           schema:
                allOf:
                  - $ref: '#/components/schemas/UpdateRequest'
                  - type: object
                    properties:
                      entity:
                        $ref: '#/components/schemas/TherapistResponse'

      responses:
        '200':
          description: Therapist details updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/TherapistResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
    
    delete:
      tags:
        - Therapist Management
      summary: Remove a therapist account
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
            example: "therapist123"
            description: Unique identifier of the therapist to be removed
      responses:
        '200':
          description: Therapist account removed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          therapistId:
                            type: string
                            example: "therapist123"
                            description: Identifier of the removed therapist
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'


  /therapists/{therapistId}/clients:
    get:
      tags:
        - Therapist Management
      summary: View list of clients mapped to the therapist
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of clients retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/TherapistResponse'

        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
                   

    # post:
    #   tags:
    #     - Therapist Management
    #   summary: Map a client to the therapist
    #   parameters:
    #     - name: therapistId
    #       in: path
    #       required: true
    #       schema:
    #         type: string
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           type: object
    #           properties:
    #             clientId:
    #               type: string
    #           required:
    #             - clientId
    #   responses:
    #     '200':
    #       description: Client mapped successfully
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               status:
    #                 type: boolean
    #                 example: true
    #               message:
    #                 type: string
    #                 example: "Client mapped successfully"
    #               data:
    #                 type: object
    #                 properties:
    #                   therapistIds:
    #                     type: array
    #                     items:
    #                       type: string
    #                     example:
    #                       - "therapist456"
    #                       - "therapist789"
    #     '400':
    #       description: Invalid input
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               status:
    #                 type: boolean
    #                 example: false
    #               message:
    #                 type: string
    #                 example: "Invalid input"
    #               data:
    #                 type: object
    delete:
      tags:
        - Therapist Management
      summary: Remove a client mapping from the therapist
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Client mapping removed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  

 

  # /clients/{clientId}/therapists/{therapistId}/messages:
  #   get:
  #     tags:
  #       - Messaging
  #     summary: View message history with a therapist
  #     parameters:
  #       - name: clientId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: therapistId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: Message history retrieved successfully
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: boolean
  #                   example: true
  #                 message:
  #                   type: string
  #                   example: "Message history retrieved successfully"
  #                 data:
  #                   type: array
  #                   items:
  #                     type: object
  #                     properties:
  #                       messageId:
  #                         type: string
  #                         example: "message789"
  #                       sender:
  #                         type: string
  #                         example: "client123"
  #                       content:
  #                         type: string
  #                         example: "How are you feeling today?"
  #                       timestamp:
  #                         type: string
  #                         format: date-time
  #                         example: "2025-01-06T08:00:00Z"
  #       '400':
  #         description: Invalid input
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: "Invalid input"
  #                 data:
  #                   type: object
               

  #   post:
  #     tags:
  #       - Messaging
  #     summary: Send a message to a therapist
  #     parameters:
  #       - name: clientId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: therapistId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               content:
  #                 type: string
  #             required:
  #               - content
  #     responses:
  #       '200':
  #         description: Message sent successfully
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: boolean
  #                   example: true
  #                 message:
  #                   type: string
  #                   example: "Message sent successfully"
  #                 data:
  #                   type: object
  #                   properties:
  #                     messageId:
  #                       type: string
  #                       example: "message789"
  #                     sender:
  #                       type: string
  #                       example: "client123"
  #                     content:
  #                       type: string
  #                       example: "How are you feeling today?"
  #                     timestamp:
  #                       type: string
  #                       format: date-time
  #                       example: "2025-01-06T08:00:00Z"
  #       '400':
  #         description: Invalid input
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: "Invalid input"
  #                 data:
  #                   type: object
                 
  # /therapists/{therapistId}/clients/{clientId}/messages:
  #   post:
  #     tags:
  #       - Messaging
  #     summary: Send a message to a client
  #     parameters:
  #       - name: therapistId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: clientId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               content:
  #                 type: string
  #             required:
  #               - content
  #     responses:
  #       '200':
  #         description: Message sent successfully
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: boolean
  #                   example: true
  #                 message:
  #                   type: string
  #                   example: "Message sent successfully"
  #                 data:
  #                   type: object
  #                   properties:
  #                     messageId:
  #                       type: string
  #                       example: "message123"
  #                     sender:
  #                       type: string
  #                       example: "therapist456"
  #                     content:
  #                       type: string
  #                       example: "I hope you're feeling better today."
  #                     timestamp:
  #                       type: string
  #                       format: date-time
  #                       example: "2025-01-06T09:30:00Z"
  #       '400':
  #         description: Invalid input
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: "Invalid input"
  #                 data:
  #                   type: object
      
                  
  /search/notes-and-journals:
    get:
      tags:
        - Search
      summary: "Search dynamically across therapist's session notes and client emotion journals"
      description: "Allow clients to dynamically search for specific keywords across therapists' session notes and emotion journals."
      parameters:
        - name: keyword
          in: query
          description: "The keyword to search for in therapist session notes or emotion journals"
          required: true
          schema:
            type: string
        - name: clientId
          in: query
          description: "The client ID to search the emotion journal "
          required: true
          schema:
            type: string
        - name: therapist_id
          in: query
          description: "The therapist ID to search the therapist's notes"
          required: true
          schema:
            type: string
        - name: start_date
          in: query
          description: "Optional start date to filter search results"
          required: false
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          description: "Optional end date to filter search results"
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: "A list of matching results from therapist notes and/or client emotion journals"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response' 
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          results:
                            type: object
                            properties:
                              journal:
                                type: array
                                items:
                                  $ref: '#/components/schemas/JournalResponse'
                              notes:
                                type: array
                                items:
                                  $ref: '#/components/schemas/SessionResponse'
                          
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  


  /search/therapists:
    get:
      tags:
        - Search
      summary: "Search dynamically for therapists"
      description: "Allow clients to search for therapists dynamically by keywords, specializations, address, name."
      parameters:
        - name: keyword
          in: query
          description: "The keyword to search for therapists, e.g. name"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "A list of therapists matching the search criteria"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/TherapistResponse'
                        
                       
                           
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  
  /therapists/{therapistId}/sessions:
    post:
      tags:
        - Sessions
      summary: Create or save a session
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
          description: ID of the therapist creating the session
      requestBody:
        required: true
        content:
          application/json:
            schema:
                allOf:
                  - $ref: '#/components/schemas/SessionRequest'
      responses:
        '200':
          description: Session saved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                          $ref: '#/components/schemas/SessionResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
   

  /therapists/{therapistId}/sessions/{sessionId}:
    patch:
      tags:
        - Sessions
      summary: Modify session details
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
          description: ID of the therapist
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
          description: Unique ID of the session to be updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
                allOf:
                  - $ref: '#/components/schemas/UpdateRequest'
                  - type: object
                    properties:
                      entity:
                        $ref: '#/components/schemas/SessionRequest'
         
      responses:
        '200':
          description: Session updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/SessionResponse'
       
    get:
      tags:
        - Sessions
      summary: Get session details
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
          description: ID of the therapist
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
          description: Unique ID of the session
      responses:
        '200':
          description: Session details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
    delete:
      tags:
        - Sessions
      summary: Delete session details
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
          description: ID of the therapist
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
          description: Unique ID of the session to be deleted
      responses:
        '200':
          description: Session deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
       
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Authenticate user and get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
                allOf:
                  - $ref: '#/components/schemas/LoginRequest'
             
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /message:
    post:
      tags:
        - Messaging
      summary: Send a message 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                  - $ref: '#/components/schemas/MessageRequest'


      responses:
        '200':
          description: Message sent successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                          $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  /message/history:
    get:
      tags:
        - Messaging
      summary: Fetch message exchanges
      parameters:
        - name: participant1Id
          in: query
          required: true
          schema:
            type: string
          description: ID of the first participant (client or therapist)
        - name: participant2Id
          in: query
          required: true
          schema:
            type: string
          description: ID of the second participant (client or therapist)
      responses:
        '200':
          description: Conversation history fetched successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
    
  /search/customers:
    get:
      tags:
        - Search
      summary: Search across customers, notes, and emotion journals
      parameters:
        - name: keyword
          in: query
          required: true
          schema:
            type: string
          description: The keyword to search for
        - name: filter
          in: query
          required: true
          schema:
            type: string
            enum:
              - clients
              - notes
              - journals
              - all
      
          description: The filter of the search (e.g., clients, session notes, emotion journals, or all)
      responses:
        '200':
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response' 
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          results:
                            type: object
                            properties:
                              journal:
                                type: array
                                items:
                                  $ref: '#/components/schemas/JournalResponse'
                              notes:
                                type: array
                                items:
                                  $ref: '#/components/schemas/SessionResponse'
                              client:
                                $ref: '#/components/schemas/ClientResponse'
                          
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
  /clients/{clientId}/journal-access/request:
    post:
      tags:
        - Journals
      summary: Request therapist access to client emotions journal
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: therapistId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Journal access request sent successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          requestId:
                            type: string
                            description: Unique ID for the journal access request
                            example: "journalReq123"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /therapists/{therapistId}/clients/request:
    post:
      tags:
        - Therapist Management
      summary: Therapist requests to map a client to their therapy account
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
        - name: clientId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Client mapping request submitted successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/components/schemas/TherapistResponse'
                          - type: object
                            properties:
                              requestId:
                                type: string
                                description: Unique ID for the mapping request
                                example: "req123"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  # /clients/{clientId}/therapy/{therapistId}/status:
  #   patch:
  #     tags:
  #       - Client Management
  #     summary: Approve or reject therapist’s mapping request to client account
  #     parameters:
  #       - name: clientId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: therapistId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: action
  #         in: query
  #         required: true
  #         schema:
  #           type: string
  #           enum:
  #             - approve
  #             - reject
  #     responses:
  #       '200':
  #         description: Action processed successfully
  #         content:
  #           application/json:
  #             schema:
  #               allOf:
  #                 - $ref: '#/components/schemas/Response'
  #                 - type: object
  #                   properties:
  #                     data:
  #                         $ref: '#/components/schemas/TherapistResponse'
  #       '400':
  #         description: Invalid input
  #         content:
  #           application/json:
  #             schema:
  #               allOf:
  #                 - $ref: '#/components/schemas/Response'
  #                 - type: object
  #                   properties:
  #                     status:
  #                       type: boolean
  #                       example: false
  #                     message :
  #                       type: string
  #                       example: Error occured
       
  # /therapists/{therapistId}:
  #   get:
  #     tags:
  #       - Therapist Management
  #     summary: Get therapist information
  #     parameters:
  #       - name: therapistId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: fieldsToExclude
  #         in: query
  #         required: false
  #         schema:
  #           type: string
  #           description: Comma-separated list of fields to exclude from the response (e.g., "email,description")
  #     responses:
  #       '200':
  #         description: Therapist information retrieved successfully
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: boolean
  #                   example: true
  #                 message:
  #                   type: string
  #                   example: "Therapist information retrieved successfully"
  #                 data:
  #                   type: object
  #                   properties:
  #                     email:
  #                       type: string
  #                       example: "therapist@example.com"
  #                     name:
  #                       type: string
  #                       example: "Dr. John Smith"
  #                     description:
  #                       type: string
  #                       example: "Experienced therapist specializing in cognitive therapy."
  #                     therapistId:
  #                       type: string
  #                       example: "therapist123"
  #               required:
  #                 - status
  #                 - message
  #                 - data
  #       '400':
  #         description: Invalid input
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: "Invalid input"
  /appointments/request:
    post:
      summary: Request an appointment in an available slot
      description: Allows a client to request an appointment with a therapist in an available time slot.
      tags:
        - Appointments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AppointmentRequest'
      responses:
        '200':
          description: Appointment requested successfully
          content:
              application/json:
                  schema:
                    $ref: '#/components/schemas/AppointmentResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

  /requests/{requestId}/status:
    put:
      summary: Update the status of a request
      description: Allows updating the status of any request (e.g., appointment requests, user requests, or others) using a query parameter.
      tags:
        - Requests
      parameters:
        - name: requestId
          in: path
          required: true
          description: The ID of the request to update.
          schema:
            type: string
            example: "request123"
        - name: status
          in: query
          required: true
          description: The new status of the request (e.g., `pending`, `approved`, or `rejected`).
          schema:
            type: string
            enum:
              - pending
              - approved
              - rejected
            example: "approved"
        - name: notes
          in: query
          required: false
          description: Optional notes explaining the status change.
          schema:
            type: string
            example: "Request approved for the specified date."
      responses:
        '200':
          description: Request status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  requestId:
                    type: string
                    description: The ID of the request.
                    example: "request123"
                  status:
                    type: string
                    description: The updated status of the request.
                    example: "approved"
                  notes:
                    type: string
                    description: Additional notes about the status change, if provided.
                    example: "Request approved for the specified date."
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'

components:
  schemas:
    
    Response:
      type: object
      properties:
        status:
          type: boolean
          description: Indicates whether the operation was successful.
          example: true
        message:
          type: string
          description: A human-readable message providing additional details about the operation.
          example: "Operation completed successfully."
        data:
          type: object
          description: Response-specific data
          nullable: true
          example: {}
    ClientResponse:
      type: object
      properties:
        clientId:
          type: string
          description: A unique identifier for the client.
          example: "client123"
        name:
          type: string
          description: The full name of the client.
          example: "John Doe"
        email:
          type: string
          format: email
          description: The email address of the client.
          example: "client@example.com"
        phone:
          type: number
          description: The client's phone number.
          example: 1234567890
        address:
          type: string
          description: The client's address.
          example: "123 Wellness Street, Health City"
        dateOfBirth:
          type: string
          format: date
          description: The client's date of birth.
          example: "1990-05-15"
    TherapistResponse:
      type: object
      properties:
        therapist_id:
          type: integer
          example: 1
        email:
          type: string
          example: therapist@example.com
        first_name:
          type: string
          example: Jane
        last_name:
          type: string
          example: Smith
        specialization:
          type: string
          example: Cognitive Behavioral Therapy
        created_at:
          type: string
          format: date-time
          example: '2025-01-13T12:34:56Z'
    AppointmentRequest:
      type: object
      properties:
        therapistId:
          type: string
          example: "therapist1234"
        sessionId:
          type: string
          example: "sessionId"
        clientId:
          type: string
          example: "string"
        message:
          type: string
          example: "Looking forward to discussing progress."
      required:
        - therapistId
        - sessionId
        - clientId
        - message
    AppointmentResponse:
      type: object
      properties:
        requestId:
          type: string
          example: "request123"
        status:
          type: string
          example: "pending"
        therapistId:
          type: string
          example: "therapist123"
        clientId:
          type: string
          example: "string"
        sessionId:
          type: string
          example: "slot456"
        requestedAt:
          type: string
          format: date-time
          example: "2025-01-07T09:00:00Z"
      required:
        - requestId
        - status
        - therapistId
        - clientId
        - slotId
        - requestedAt
    JournalResponse:
      type: object
      properties:
        journalId:
          type: string
          example: "journal789"
        clientId:
          type: string
          example: "client123"
        emotion:
          type: string
          example: "Happiness"
        feeling:
          type: string
          example: "Joyful"
        intensity:
          type: string
          example: "Medium"
        notes:
          type: string
          example: "Had a productive day."
        timestamp:
          type: string
          format: date-time
          example: "2025-01-06T15:00:00Z"
      required:
        - journalId
        - clientId
        - emotion
        - feeling
        - intensity
        - notes
        - timestamp
    JournalRequest:
      type: object
      properties:
        clientId:
          type: string
          example: "client123"
        emotion:
          type: string
          example: "Happiness"
        feeling:
          type: string
          example: "Joyful"
        intensity:
          type: string
          example: "Medium"
        notes:
          type: string
          example: "Had a productive day."
        timestamp:
          type: string
          format: date-time
          example: "2025-01-06T15:00:00Z"
      required:
        - clientId
        - emotion
        - feeling
        - intensity
        - notes
        - timestamp
    ClientRequest:
      type: object
      properties:
        name:
          type: string
          description: The full name of the client.
          example: "John Doe"
        email:
          type: string
          format: email
          description: The email address of the client.
          example: "client@example.com"
        phone:
          type: number
          description: The client's phone number.
          example: 1234567890
        address:
          type: string
          description: The client's address.
          example: "123 Wellness Street, Health City"
        dateOfBirth:
          type: string
          format: date
          description: The client's date of birth.
          example: "1990-05-15"
        password:
          type: string
          description: The client's password for account access.
          example: "securepassword123"
      required:
        - name
        - email
        - phone
        - address
        - dateOfBirth
        - password
    TherapistRequest:
        type: object
        properties:
          email:
            type: string
            format: email
            example: therapist@example.com
          first_name:
            type: string
            example: Jane
          last_name:
            type: string
            example: Smith
          specialization:
            type: string
            example: Cognitive Behavioral Therapy
          password:
            type: string
            description: The therapist's password for account access.
            example: "securepassword123"

        required:
          - email
          - first_name
          - last_name
          - specialization
          - password
    
    UpdateRequest:
      type: object
      properties:
        entity:
          type: object
          description: Entity that needs to be updated. The type should be specified in the `requestBody`.
        fieldsToUpdate:
          type: array
          description: List of fields that need to be updated. Only these fields will be updated in the database.
          items:
            type: string
            example: ["name", "email"]
    MessageRequest:
      type: object
      properties:
        message_request_id:
          type: integer
          description: Unique ID for each message request
        message:
          type: string
          description: The content of the message being sent
        sender_id:
          type: string
          description: ID of the sender (client or therapist)
        receiver_id:
          type: string
          description: ID of the receiver (client or therapist)
        role:
          type: string
          enum: ['client', 'therapist']
          description: The role of the sender (client or therapist)
        request_timestamp:
          type: string
          format: date-time
          description: Timestamp when the message request was sent

    MessageResponse:
      type: object
      properties:
        message_id:
          type: string
          description: Unique ID for each message response
        sender:
          type: string
          description: The sender's ID (client or therapist)
        receiver:
          type: string
          description: The receiver's ID (client or therapist)
        content:
          type: string
          description: The content of the response message
        timestamp:
          type: string
          format: date-time
          description: Timestamp when the response was 
    SessionRequest:
      type: object
      properties:
        privateNotes:
          type: string
          description: Private notes visible only to the therapist
        sharedNotes:
          type: string
          description: Shared notes visible to both the therapist and client
        sessionDate:
          type: string
          format: date
          description: The exact date for the session (in YYYY-MM-DD format)
        startTime:
          type: string
          format: time
          description: The start time of the session (in HH:MM:SS format)
        endTime:
          type: string
          format: time
          description: The end time of the session (in HH:MM:SS format)
      required:
        - therapistId
        - sessionDate
        - startTime
        - endTime

    SessionResponse:
      type: object
      properties:
        sessionId:
          type: string
          description: Unique ID of the session
        therapistId:
          type: string
          description: The ID of the therapist who conducted the session
        slotId:
          type: string
          description: Unique ID for the scheduled slot (can be used to refer to specific day and time combinations)
        privateNotes:
          type: string
          description: Private notes visible only to the therapist
        sharedNotes:
          type: string
          description: Shared notes visible to both the therapist and client
        sessionDate:
          type: string
          format: date
          description: The exact date of the session (in YYYY-MM-DD format)
        startTime:
          type: string
          format: time
          description: The start time of the session (in HH:MM:SS format)
        endTime:
          type: string
          format: time
          description: The end time of the session (in HH:MM:SS format)
      required:
        - sessionId
        - therapistId
        - slotId
        - sessionDate
        - startTime
        - endTime

    LoginResponse:
      type: object
      properties:
        status:
          type: string
          description: The status of the response (e.g., success, error)
          example: "success"
        message:
          type: string
          description: A message providing more details about the login status
          example: "Login successful"
        data:
          type: object
          properties:
            token:
              type: string
              description: The JWT token issued upon successful login
              example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
      required:
        - status
        - message
        - data
    Error500:
      type: object
      description: Internal Server Error - Unexpected condition occurred
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            status:
              type: boolean
              example: false
            message:
              type: string
              example: "An unexpected error occurred on the server"
    Error400:
      type: object
      description: Bad Request - Invalid input
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            status:
              type: boolean
              example: false
            message:
              type: string
              example: "Error occurred" 
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: The email address of the user
          example: "user@example.com"
        password:
          type: string
          description: The password of the user
          example: "string"
        role:
          type: string
          enum:
            - client
            - therapist
          description: The role of the user (either client or therapist)
          example: "client"
      required:
        - email
        - password
        - role